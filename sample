<!DOCTYPE html>
<html>
<head>
  <title>BootstrapTable Dynamic Editable Example</title>
  <!-- Include necessary CSS and JavaScript files -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.12.1/bootstrap-table.min.css">
</head>
<body>
  <div class="container">
    <table id="myTable"></table>
  </div>

  <!-- Include necessary JavaScript files -->
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.12.1/bootstrap-table.min.js"></script>
  <script>
    $(document).ready(function () {
      $('#myTable').bootstrapTable({
        columns: [
          {
            field: 'name',
            title: 'Name'
          },
          {
            field: 'editableField',
            title: 'Editable Field',
            editable: false // Initial value
          },
          {
            field: 'status',
            title: 'Status',
            editable: true,
            formatter: statusFormatter, // Custom formatter for status column
            events: {
              'change .status-select': function (e, value, row, index) {
                const selectedValue = e.target.value;
                const $table = $('#myTable');
                const columnIndex = $table.find('th[data-field="editableField"]').index();

                // Update the data with the new status value
                $table.bootstrapTable('updateRow', {
                  index: index,
                  row: { status: selectedValue }
                });

                // Update the editable property based on the new status
                $table.bootstrapTable('updateCell', {
                  index: index,
                  field: 'editableField',
                  value: row.editableField,
                  editable: selectedValue === 'enabled'
                });
              }
            }
          }
        ],
        data: [
          { name: 'John', editableField: 'Value 1', status: 'enabled' },
          { name: 'Alice', editableField: 'Value 2', status: 'enabled' },
          { name: 'Bob', editableField: 'Value 3', status: 'disabled' }
        ],
        escape: true,
        editable: true
      });
    });

    // Custom formatter for status column
    function statusFormatter(value, row, index) {
      const enabledSelected = row.status === 'enabled' ? 'selected' : '';
      const disabledSelected = row.status === 'disabled' ? 'selected' : '';

      return `<select class="status-select">
                <option value="enabled" ${enabledSelected}>Enabled</option>
                <option value="disabled" ${disabledSelected}>Disabled</option>
              </select>`;
    }
  </script>
</body>
</html>
