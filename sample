<!DOCTYPE html>
<html>
<head>
  <title>BootstrapTable Disable Editable Field Programmatically Example</title>
  <!-- Include necessary CSS and JavaScript files -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.12.1/bootstrap-table.min.css">
</head>
<body>
  <div class="container">
    <table id="myTable"></table>
  </div>

  <!-- Include necessary JavaScript files -->
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.12.1/bootstrap-table.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-table/1.12.1/extensions/editable/bootstrap-table-editable.min.js"></script>
  <script>
    $(document).ready(function () {
      $('#myTable').bootstrapTable({
        columns: [
          {
            field: 'name',
            title: 'Name'
          },
          {
            field: 'editableField',
            title: 'Editable Field',
            editable: true
          }
        ],
        data: [
          { name: 'John', editableField: 'Edit Me' },
          { name: 'Alice', editableField: 'Can Edit' },
          { name: 'Bob', editableField: 'Click to Edit' }
        ],
        escape: true,
        editable: true
      });
    });

    // Programmatically disable the editable field
    function disableEditableField(rowIndex) {
      const $table = $('#myTable');
      const rowData = $table.bootstrapTable('getData')[rowIndex];
      
      // Update the cell with a new value and disable editing
      rowData.editableField = 'Disabled';
      $table.bootstrapTable('updateCell', { index: rowIndex, field: 'editableField', value: 'Disabled' });
      
      // Optionally, you can update the cell's CSS to visually indicate that it's disabled
      const $cell = $table.find(`tr[data-index="${rowIndex}"] td[data-field="editableField"]`);
      $cell.css('background-color', '#f0f0f0');
      $cell.find('input').prop('disabled', true);
    }

    // Call the disableEditableField function for a specific row index
    disableEditableField(1); // Disable the editable field for the second row
  </script>
</body>
</html>
